name: Auto-crop logos (PR-based)

on:
  push:
    paths:
      - 'assets/images/logos/**'
  workflow_dispatch:
    inputs:
      white_thresh:
        description: 'White threshold for background detection (0-255)'
        required: false
        default: '245'
      pad:
        description: 'Padding in pixels to add after cropping'
        required: false
        default: '8'

permissions:
  contents: write
  pull-requests: write
  actions: read

concurrency:
  group: autocrop-agent
  cancel-in-progress: true

jobs:
  autocrop:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pillow numpy

      - name: Run autocrop agent
        env:
          INPUT_DIR: assets/images/logos
          OUTPUT_DIR: cropped
          CACHE_FILE: '.autocrop_cache.json'
        run: |
          WHITE_THRESH="${{ github.event.inputs.white_thresh || '245' }}"
          PAD="${{ github.event.inputs.pad || '8' }}"
          cd "${{ github.workspace }}"
          python scripts/autocrop.py \
            --input-dir "${INPUT_DIR}" \
            --output-dir "${OUTPUT_DIR}" \
            --white-thresh "${WHITE_THRESH}" \
            --pad "${PAD}" \
            --cache-file "${CACHE_FILE}"

      - name: Clean up any git artifacts in output directory
        run: |
          cd "${{ github.workspace }}"
          # Remove any nested .git directories or files
          find cropped -name ".git*" -type d -exec rm -rf {} + 2>/dev/null || true
          find cropped -name ".git*" -type f -exec rm -f {} + 2>/dev/null || true
          echo "Cleaned up any git artifacts in cropped directory"

      - name: Debug list cropped contents for quick inspection
        run: |
          cd "${{ github.workspace }}"
          echo "Cropped directory contents:"
          ls -la cropped || echo "cropped directory missing or empty"
          echo "Current working directory: $(pwd)"
          echo "Git status check:"
          git status --porcelain cropped/ || echo "No git status for cropped directory"

      - name: Prepare for PR creation
        run: |
          cd "${{ github.workspace }}"
          echo "Ensuring we're in repository root: $(pwd)"
          echo "Repository git status:"
          git status --short
          echo "Files to be included in PR:"
          find cropped -type f 2>/dev/null || echo "No files in cropped directory"

      - name: Create pull request with cropped images (if any changes)
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Auto-crop logos: add/updated cropped images [skip ci]"
          branch: "autocrop/changes"
          title: "Auto-crop logos: processed images"
          body: |
            This PR contains auto-cropped versions of images from assets/images/logos/ subdirectories.
            - Cropping is done automatically by scripts/autocrop.py
            - You can adjust the algorithm via workflow inputs or .github/auto-crop.yml
          labels: "automated,autocrop"
          add-paths: |
            cropped/
          delete-branch: true